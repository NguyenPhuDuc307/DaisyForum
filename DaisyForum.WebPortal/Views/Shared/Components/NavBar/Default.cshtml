@using Microsoft.AspNetCore.Html;

@model List<DaisyForum.WebPortal.Controllers.Components.NavBarViewComponent.TreeNode>

@functions {
    public static IHtmlContent RenderChildNodes(DaisyForum.WebPortal.Controllers.Components.NavBarViewComponent.TreeNode node)
    {
        if (node.Children.Count == 0)
        {
            return HtmlString.Empty;
        }

        var childNodesHtml = string.Join(string.Empty, node.Children.Select(child => child.Children.Count>0 ? $"<li class=\"list-group-item p-0\"><label><a class=\"text-decoration-none text-light-emphasis\" href=\"/danh-muc/{child.SeoAlias}-{child.Id}\">{child.Name}</a></label><div class=\"p-0 collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse_{child.Id}\" aria-expanded=\"false\" aria-controls=\"collapse_{child.Id}\"><i class=\"text-sm text-secondary\">Xem thêm</i></div><ul id=\"collapse_{child.Id}\" class=\"ml-3 list-group list-group-flush collapse\" data-bs-parent=\"#accordionExample\">{RenderChildNodes(child)}</ul></li>": $"<li class=\"list-group-item p-0\"><label><a class=\"text-decoration-none text-light-emphasis\" href=\"/danh-muc/{child.SeoAlias}-{child.Id}\">{child.Name}</a></label></li>"));

    return new HtmlString($"{childNodesHtml}");
    }
}

<nav class="fixed-top py-2 navbar navbar-expand-lg bg-success border-bottom shadow-sm text-light" style="opacity: 95%;">
  <div class="container-fluid">
    <a class="nav-link px-2 active" href="/">
      <img height="36px" width="auto" src="/favicon.svg" alt="Daisy Forum logo" class="me-1">
      Trang chủ</a>
    <button class="navbar-toggler text-secondary" type="button" data-bs-toggle="collapse"
      data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
      aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link px-2 text-light">Bài đăng</a>
          @if (Model.Count > 0)
          {
          <ul class="sub-menu1 position-absolute top-0 border rounded accordion list-group list-group-flush mt-5">
            @foreach (var node in Model.Where(n => n.ParentId == null))
            {
            <li class="list-group-item px-2">
              <label>
                <a href="/danh-muc/@node.SeoAlias-@node.Id"
                  class="text-decoration-none text-light-emphasis">@node.Name</a>
              </label>

              <div class="p-0 collapsed" type="button" data-bs-toggle="collapse"
                data-bs-target="#collapse_@node.Id" aria-expanded="false" aria-controls="collapse_@node.Id">
                <i class="text-sm text-secondary">Xem thêm</i>
              </div>

              <ul id="collapse_@node.Id" class="ml-3 list-group list-group-flush collapse"
                data-bs-parent="#accordionExample">
                @RenderChildNodes(node)
              </ul>
            </li>
            }
          </ul>
          }

        </li>

        <li class="nav-item">
          @if (User.Identity.IsAuthenticated)
          {
          <a class="nav-link px-2 text-light" href="/bai-dang-moi" title="Đăng bài mới">Đăng bài mới</a>
          }
        </li>
      </ul>
      <form id="search-form" method="get" action="/tim-kiem" autocomplete="off" class="col-lg-auto mb-3 mb-lg-0"
        role="search">
        <input type="search" class="form-control bg-success border-light text-light search" name="keyword"
          placeholder="Bạn có câu hỏi?" aria-label="Search">
        <div id="search-error-container"></div>
      </form>
      <ul class="navbar-nav">
        <partial name="_LoginPartial" />
        <div class="ml-1 mt-1">
          <button class="btn btn-sm" type="button" id="switch-btn" onclick="myFunction()">
            <i id="switch-icon"></i>
          </button>
        </div>
      </ul>
    </div>
  </div>
</nav>

<style>
  .search::placeholder {
    color: white;
  }

  nav a:hover {
    color: black !important;
  }

  .sub-menu1 {
    width: 280px;
    display: none;
    top: 100%;
    z-index: 999;
    left: auto;
  }

  .nav-item:hover .sub-menu1 {
    display: block;
  }
</style>

<script>
  window.addEventListener("load", function () {
    var icon = document.getElementById("switch-icon");
    var btn = document.getElementById("switch-btn");

    var theme = getCookie("theme");
    if (theme == "dark") {
      icon.classList.remove("bi-moon-stars-fill");
      icon.classList.add("bi-brightness-high-fill");
      btn.classList.remove("btn-dark");
      btn.classList.add("btn-light");
    } else {
      icon.classList.remove("bi-brightness-high-fill");
      icon.classList.add("bi-moon-stars-fill");
      btn.classList.remove("btn-light");
      btn.classList.add("btn-dark");
    }

    // Tạm thời tắt transition
  var elements = document.querySelectorAll("body *");
  for (var i = 0; i < elements.length; i++) {
    elements[i].style.transition = "none";
  }

  // Thêm hoặc xóa lớp animate cho các phần tử
  for (var i = 0; i < elements.length; i++) {
    if (theme == "dark") {
      elements[i].classList.add("animate");
    } else {
      elements[i].classList.remove("animate");
    }
  }

  // Bật lại transition
  setTimeout(function() {
    for (var i = 0; i < elements.length; i++) {
      elements[i].style.transition = "";
    }
  }, 200);
  });

  function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
    var expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  }

  function myFunction() {
    var element = document.body;
    element.dataset.bsTheme = element.dataset.bsTheme == "light" ? "dark" : "light";
    setCookie("theme", element.dataset.bsTheme, 365);

    var icon = document.getElementById("switch-icon");
    var btn = document.getElementById("switch-btn");

    icon.classList.remove("bi-moon-stars-fill", "bi-brightness-high-fill");
    btn.classList.remove("btn-light", "btn-dark");
    if (element.dataset.bsTheme == "dark") {
      icon.classList.add("bi-brightness-high-fill");
      btn.classList.add("btn-light");
    } else {
      icon.classList.add("bi-moon-stars-fill");
      btn.classList.add("btn-dark");
    }

   
  }

  function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return "";
  }

  var theme = getCookie("theme");
  if (theme) {
    document.body.dataset.bsTheme = theme;
  }
</script>